# This is a basic workflow to help you get started with Actions

name: Building for Windows

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
         - '*'
env:
  DEB_DH_SHLIBDEPS_ARGS_ALL: "--dpkg-shlibdeps-params=--ignore-missing-info"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_win32_64_installer:
    runs-on: ubuntu-latest
    container: fedora:38
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Runs a single command using the runners shell
      - name: Install all dependencies for Win32 and Win64
        run: |
            sudo dnf update -y
            sudo dnf install -y autoconf automake gettext-devel glib2-devel intltool libtool make mingw32-filesystem mingw32-glib2 mingw32-libpng mingw32-gcc mingw32-nsis mingw64-filesystem mingw64-glib2 mingw64-libpng mingw64-gcc mingw64-nsis pkgconf-pkg-config which
            mkdir -p distribute/win/3rdparty

      - name: Regenerate common ./configure script
        run: sh autogen.sh

      - name: Cross-compile and make installer for Win64
        run: |
            mingw64-configure --without-magick --without-pstoedit
            make
            makensis -DVERSION=$(date +%Y%m%d) -DFLAVOUR=win64 distribute/win/autotrace.nsi

      - name: Cross-compile and make installer for Win32
        run: |
            mingw32-configure --without-magick --without-pstoedit
            make -B
            makensis -DVERSION=$(date +%Y%m%d) -DFLAVOUR=win32 distribute/win/autotrace.nsi

      - uses: actions/upload-artifact@v4.3.0
        with:
          name: win32-installer
          path: distribute/win/autotrace-*-setup.exe